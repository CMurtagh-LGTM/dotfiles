(defwidget music_widget []
  (box :orientation "h" :space-evenly false :class "float"
      (image :image-width 160 :path art)
      (box :orientation "v" :space-evenly false :valign "center" :halign "center"
        (label :text artist :limit-width 25)
        (label :text album :limit-width 25)
        (label :text song :limit-width 25))
    (box :orientation "h" :halign "end" :valign "center" :space-evenly false
      (button :class "media_control" :onclick "mpc prev" "")
      (button :class "media_control" :onclick "mpc toggle" {player_status == "playing" ? "❚❚" : "▶"})
      (button :class "media_control" :onclick "mpc next" ""))))

(defwidget audio_bar [variable index]
  (progress :value {variable[index]} :orientation "v" :class "cava_bar" :flipped true))

(defwidget cava_widget []
  (box :class "float"
    (audio_bar :variable cava :index 0)
    (audio_bar :variable cava :index 1)
    (audio_bar :variable cava :index 2)
    (audio_bar :variable cava :index 3)
    (audio_bar :variable cava :index 4)
    (audio_bar :variable cava :index 5)
    (audio_bar :variable cava :index 6)
    (audio_bar :variable cava :index 7)
    (audio_bar :variable cava :index 8)
    (audio_bar :variable cava :index 9)
    (audio_bar :variable cava :index 10)
    (audio_bar :variable cava :index 11)
    (audio_bar :variable cava :index 12)
    (audio_bar :variable cava :index 13)
    (audio_bar :variable cava :index 14)
    (audio_bar :variable cava :index 15)
    (audio_bar :variable cava :index 16)
    (audio_bar :variable cava :index 17)
    (audio_bar :variable cava :index 18)
    (audio_bar :variable cava :index 19)))

(defwidget calendar_widget []
  (box :class "float" (literal :content calendar)))

(defwidget sys_widget[]
  (box :class "float"
    (box :orientation "v" :space-evenly false :halign "center" :valign "center"
      (metric :label "﬙" :value {EWW_CPU.avg})
      (metric :label "" :value {EWW_RAM.used_mem_perc})
      (metric :label "泌" :value {(EWW_NET.wlp4s0.NET_UP)/100})
      (metric :label "" :value {(EWW_DISK["/"].free / EWW_DISK["/"].total) * 100})
      (metric_red :label "﬙" :value {temperature["k10temp"]})
      (metric_red :label "" :value {temperature["nvme"]})
      (metric_red :label "度" :colour "red" :value {temperature["amdgpu"]}))))

; TODO add interactable volume slider
(defwidget sinks_widget []
  (box :class "float"
    (literal :content sinks)))

(defwidget weather_widget []
  (box :class "float" 
    (box :orientation "v" :space-evenly false
      (box :orientation "h"
        (label :class "weather_icon" :text weather_icon)
        (box :space-evenly false
          (label :class "weather_temp" :text {weather["now"]["temp"]})
          (label :class "weather_temp_C" :text ""))
      )
      (box :orientation "h"
        (label :text {weather["today"]["short_text"]}))
      (box :orientation "h" :space-evenly false :halign "center"
        (label :text "uv: ")
        (label :text {weather["today"]["uv"]["start_time"]})
        (label :text " - ")
        (label :text {weather["today"]["uv"]["end_time"]})))))

(deflisten artist :inital ""
  "mpc --format '%artist%' current")
(deflisten album :inital ""
  "mpc --format '%album%' current")
(deflisten song :inital ""
  "mpc --format '%title%' current")
(defpoll art :interval "1s" ; TODO make listen
  "mpc albumart $(mpc --format %file% current) >| /tmp/eww/art && echo '/tmp/eww/art'")
(defpoll player_status :interval "1s"
  "mpc status '%state%'")
(defpoll song_percent :interval "1s"
  "mpc status '%percenttime%'")

(deflisten cava :inital "[0, 0, 0, 0, 0, 0, 0]"
  "python ~/.config/eww/cava.py")

(defpoll calendar :interval "300s"
  "python ~/.config/eww/calendar.py")

(defpoll temperature :interval "1s"
  "python ~/.config/eww/temperature.py")

(defpoll sinks :interval "1s"
  "python ~/.config/eww/sinks.py")

(defpoll weather :interval "600s"
  "cat /tmp/weather.json")
(defpoll weather_icon :interval "600s"
  "~/.cargo/bin/liquid-bin --context /tmp/weather.json --input ~/.config/eww/weather_icon.liquid")

(defwindow music_dash :monitor 2 :geometry (geometry :x 150 :y 100 :width 510 :height 170) :wm-ignore true
  (music_widget))

(defwindow cava_dash :monitor 2 :geometry (geometry :x 670 :y 100 :width 630 :height 170) :wm-ignore true
  (cava_widget))

(defwindow calendar_dash :monitor 2 :geometry (geometry :x 150 :y 460 :width 510 :height 320) :wm-ignore true
  (calendar_widget))

(defwindow sys_dash :monitor 2 :geometry (geometry :x 1310 :y 280 :width 210 :height 170) :wm-ignore true
  (sys_widget))

(defwindow sinks_dash :monitor 2 :geometry (geometry :x 1310 :y 100 :width 210 :height 170) :wm-ignore true
  (sinks_widget))

(defwindow weather_dash :monitor 2 :geometry (geometry :x 150 :y 280 :width 510 :height 170) :wm-ignore true
  (weather_widget))
